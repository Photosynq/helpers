[
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Extract every n-th element from an array."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "access",
        "description": null,
        "lineNumber": 2,
        "access": "public"
      },
      {
        "title": "function",
        "description": null,
        "lineNumber": 3,
        "name": null
      },
      {
        "title": "param",
        "description": "Input array.",
        "lineNumber": 4,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "number"
            }
          ]
        },
        "name": "arr"
      },
      {
        "title": "param",
        "description": "Step size.",
        "lineNumber": 5,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "size",
        "default": "1"
      },
      {
        "title": "param",
        "description": "Starting point.",
        "lineNumber": 6,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "idx",
        "default": "0"
      },
      {
        "title": "returns",
        "description": "Every n-th element.",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "number"
                }
              ]
            },
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      },
      {
        "title": "example",
        "description": "ArrayNth( [ 1, 2, 3, 4, 5, 6], 2, 2 );\n// returns [3, 5]",
        "lineNumber": 8
      }
    ],
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 11,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 13,
          "column": 0
        },
        "end": {
          "line": 38,
          "column": 1
        }
      },
      "file": "/Users/kuhlgert/helpers/src/ArrayNth.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "ArrayNth( [ 1, 2, 3, 4, 5, 6], 2, 2 );\n// returns [3, 5]"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "arr",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Input array."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "number"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "size",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Step size."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "default": "1"
      },
      {
        "title": "param",
        "name": "idx",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Starting point."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "default": "0"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Every n-th element."
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "number"
                }
              ]
            },
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "function",
    "name": "ArrayNth",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "ArrayNth",
        "kind": "function"
      }
    ],
    "namespace": "ArrayNth"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This is a flexible function to generate an array of arithmetic progressions.\nAll arguments must be integers."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "access",
        "description": null,
        "lineNumber": 3,
        "access": "public"
      },
      {
        "title": "function",
        "description": null,
        "lineNumber": 4,
        "name": null
      },
      {
        "title": "param",
        "description": "Start value.",
        "lineNumber": 5,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "start",
        "default": "0"
      },
      {
        "title": "param",
        "description": "Stop value.",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "stop"
      },
      {
        "title": "param",
        "description": "Step size.",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "step",
        "default": "1"
      },
      {
        "title": "param",
        "description": "Generate a progression and transform numbers.",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "none"
              },
              {
                "type": "StringLiteralType",
                "value": "log"
              },
              {
                "type": "StringLiteralType",
                "value": "ln"
              },
              {
                "type": "StringLiteralType",
                "value": "x2"
              }
            ]
          }
        },
        "name": "transform",
        "default": "\"none\""
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 9,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "number"
                }
              ]
            },
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      },
      {
        "title": "example",
        "description": "ArrayRange(10);\n// returns [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n\nArrayRange(1,11);\n// returns [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\nArrayRange(0, 30, 5);\n// returns [0, 5, 10, 15, 20, 25]\n\nArrayRange(0, 10, 3);\n// returns [0, 3, 6, 9]\n\nArrayRange(0, 10, 3, \"x2\");\n// returns [0, 9, 36, 81]\n\nArrayRange(0, -10, -1);\n// returns [0, -1, -2, -3, -4, -5, -6, -7, -8, -9]\n\nArrayRange(0);\n// returns []\n\nArrayRange(1,0);\n// returns []",
        "lineNumber": 10
      }
    ],
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 34,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 36,
          "column": 0
        },
        "end": {
          "line": 74,
          "column": 1
        }
      },
      "file": "/Users/kuhlgert/helpers/src/ArrayRange.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "ArrayRange(10);\n// returns [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n\nArrayRange(1,11);\n// returns [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\nArrayRange(0, 30, 5);\n// returns [0, 5, 10, 15, 20, 25]\n\nArrayRange(0, 10, 3);\n// returns [0, 3, 6, 9]\n\nArrayRange(0, 10, 3, \"x2\");\n// returns [0, 9, 36, 81]\n\nArrayRange(0, -10, -1);\n// returns [0, -1, -2, -3, -4, -5, -6, -7, -8, -9]\n\nArrayRange(0);\n// returns []\n\nArrayRange(1,0);\n// returns []"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "start",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Start value."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "default": "0"
      },
      {
        "title": "param",
        "name": "stop",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Stop value."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "param",
        "name": "step",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Step size."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "default": "1"
      },
      {
        "title": "param",
        "name": "transform",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Generate a progression and transform numbers."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "StringLiteralType",
              "value": "none"
            },
            {
              "type": "StringLiteralType",
              "value": "log"
            },
            {
              "type": "StringLiteralType",
              "value": "ln"
            },
            {
              "type": "StringLiteralType",
              "value": "x2"
            }
          ]
        },
        "default": "\"none\""
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "number"
                }
              ]
            },
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "function",
    "name": "ArrayRange",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "ArrayRange",
        "kind": "function"
      }
    ],
    "namespace": "ArrayRange"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This function transforms an array of [x, y] pairs into an object with an array of x and an array of y values"
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "access",
        "description": null,
        "lineNumber": 2,
        "access": "public"
      },
      {
        "title": "function",
        "description": null,
        "lineNumber": 3,
        "name": null
      },
      {
        "title": "param",
        "description": "Array of [x, y] pairs.",
        "lineNumber": 4,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "array"
            }
          ]
        },
        "name": "input"
      },
      {
        "title": "returns",
        "description": "{ x: [x1, x2, ..., xn], y: [y1, y2, ..., yn] }",
        "lineNumber": 5,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "object"
            },
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      },
      {
        "title": "example",
        "description": "ArrayUnZip( [ [1, 4], [2, 5], [3, 6] ] );\n//returns {x: [1, 2, 3], y: [4, 5, 6]}",
        "lineNumber": 6
      }
    ],
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 9,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 11,
          "column": 0
        },
        "end": {
          "line": 22,
          "column": 1
        }
      },
      "file": "/Users/kuhlgert/helpers/src/ArrayUnZip.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "ArrayUnZip( [ [1, 4], [2, 5], [3, 6] ] );\n//returns {x: [1, 2, 3], y: [4, 5, 6]}"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "input",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Array of [x, y] pairs."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "array"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "{ x: [x1, x2, ..., xn], y: [y1, y2, ..., yn] }"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "object"
            },
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "function",
    "name": "ArrayUnZip",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "ArrayUnZip",
        "kind": "function"
      }
    ],
    "namespace": "ArrayUnZip"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This function transforms two arrays into one array of x,y pairs\nBoth arrays supplied need to have the same size."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "access",
        "description": null,
        "lineNumber": 3,
        "access": "public"
      },
      {
        "title": "function",
        "description": null,
        "lineNumber": 4,
        "name": null
      },
      {
        "title": "param",
        "description": "values.",
        "lineNumber": 5,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "number"
            }
          ]
        },
        "name": "x"
      },
      {
        "title": "param",
        "description": "values.",
        "lineNumber": 6,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "number"
            }
          ]
        },
        "name": "y"
      },
      {
        "title": "returns",
        "description": "[ [x1,y1], [x2,y2], ..., [xn,yn] ].",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "number"
                }
              ]
            },
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      },
      {
        "title": "example",
        "description": "var x = [1, 2, 3];\nvar y = [4, 5, 6];\nArrayZip(x,y)\n//returns [ [1, 4], [2, 5], [3, 6] ]",
        "lineNumber": 8
      }
    ],
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 13,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 15,
          "column": 0
        },
        "end": {
          "line": 25,
          "column": 1
        }
      },
      "file": "/Users/kuhlgert/helpers/src/ArrayZip.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "var x = [1, 2, 3];\nvar y = [4, 5, 6];\nArrayZip(x,y)\n//returns [ [1, 4], [2, 5], [3, 6] ]"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "x",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "values."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "number"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "y",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "values."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "number"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "[ [x1,y1], [x2,y2], ..., [xn,yn] ]."
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "number"
                }
              ]
            },
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "function",
    "name": "ArrayZip",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "ArrayZip",
        "kind": "function"
      }
    ],
    "namespace": "ArrayZip"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Add a Danger Message for the User. These messages will be shown in the data viewer as well.\nUse these messages to indicate a problematic issue that will most likely result in an invalid measurement."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "access",
        "description": null,
        "lineNumber": 3,
        "access": "public"
      },
      {
        "title": "function",
        "description": null,
        "lineNumber": 4,
        "name": null
      },
      {
        "title": "param",
        "description": "Danger Message",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "msg"
      },
      {
        "title": "param",
        "description": "object that is returned at the end",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "output"
      },
      {
        "title": "returns",
        "description": "pushes the message into the output object.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      },
      {
        "title": "example",
        "description": "danger('Your Danger Message', output);\n// output['messages']['info']['Your Danger Message']",
        "lineNumber": 8
      }
    ],
    "loc": {
      "start": {
        "line": 45,
        "column": 0
      },
      "end": {
        "line": 55,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 57,
          "column": 0
        },
        "end": {
          "line": 63,
          "column": 1
        }
      },
      "file": "/Users/kuhlgert/helpers/src/Message.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "danger('Your Danger Message', output);\n// output['messages']['info']['Your Danger Message']"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "msg",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Danger Message"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "output",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "object that is returned at the end"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "pushes the message into the output object."
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "function",
    "name": "danger",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "danger",
        "kind": "function"
      }
    ],
    "namespace": "danger"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Find the positions for protocols within a protocol set matching the\nprovided label. If only one label exists within a set, a number is returned.\nWhen multiple protocols in the set have the same label an array with all\nindexes of matching labels is returned."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "access",
        "description": null,
        "lineNumber": 5,
        "access": "public"
      },
      {
        "title": "function",
        "description": null,
        "lineNumber": 6,
        "name": null
      },
      {
        "title": "param",
        "description": "Label from the protocol set",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "label"
      },
      {
        "title": "param",
        "description": "Required! The protocol content",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "json"
      },
      {
        "title": "param",
        "description": "Always return an array",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "array",
        "default": "false"
      },
      {
        "title": "returns",
        "description": "Single index or an array of indexes",
        "lineNumber": 10,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "number"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "number"
                }
              ]
            }
          ]
        }
      },
      {
        "title": "example",
        "description": "GetIndexByLabel( \"PAM\", json );\n// returns e.g. 1 or [1,2]\n\nGetIndexByLabel( \"PAM\", json, true );\n// returns e.g. [1] or [1,2]",
        "lineNumber": 11
      }
    ],
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 17,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 19,
          "column": 0
        },
        "end": {
          "line": 39,
          "column": 1
        }
      },
      "file": "/Users/kuhlgert/helpers/src/GetIndexByLabel.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "GetIndexByLabel( \"PAM\", json );\n// returns e.g. 1 or [1,2]\n\nGetIndexByLabel( \"PAM\", json, true );\n// returns e.g. [1] or [1,2]"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "label",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Label from the protocol set"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "json",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Required! The protocol content"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "param",
        "name": "array",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Always return an array"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "boolean"
        },
        "default": "false"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Single index or an array of indexes"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "number"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "number"
                }
              ]
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "function",
    "name": "GetIndexByLabel",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "GetIndexByLabel",
        "kind": "function"
      }
    ],
    "namespace": "GetIndexByLabel"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Generate a protocol lookup table for a protocol set."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "access",
        "description": null,
        "lineNumber": 2,
        "access": "public"
      },
      {
        "title": "function",
        "description": null,
        "lineNumber": 3,
        "name": null
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "json"
      },
      {
        "title": "returns",
        "description": "Lookup table",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      },
      {
        "title": "example",
        "description": "GetLabelLookup(json);\n// returns e.g. { \"PAM\": [0,2], \"ECS\": [1]}",
        "lineNumber": 6
      }
    ],
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 9,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 11,
          "column": 0
        },
        "end": {
          "line": 32,
          "column": 1
        }
      },
      "file": "/Users/kuhlgert/helpers/src/GetLabelLookup.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "GetLabelLookup(json);\n// returns e.g. { \"PAM\": [0,2], \"ECS\": [1]}"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "json",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Lookup table"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "function",
    "name": "GetLabelLookup",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "GetLabelLookup",
        "kind": "function"
      }
    ],
    "namespace": "GetLabelLookup"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns the protocol from within the protocol set matching the provided label.\nIf only one label exists, one protocol object is returned.\nWhen multiple protocols in the set have the same label an array with all\nprotcol objects of matching labels is returned."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "access",
        "description": null,
        "lineNumber": 5,
        "access": "public"
      },
      {
        "title": "function",
        "description": null,
        "lineNumber": 6,
        "name": null
      },
      {
        "title": "param",
        "description": "The label from the protocol set",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "label"
      },
      {
        "title": "param",
        "description": "Required! The protocol content",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "json"
      },
      {
        "title": "param",
        "description": "Always return an array",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "array",
        "default": "false"
      },
      {
        "title": "returns",
        "description": "Single protocol or an array of protocols",
        "lineNumber": 10,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Object"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "Object"
                }
              ]
            }
          ]
        }
      },
      {
        "title": "example",
        "description": "GetIndexByLabel( \"PAM\", json );\n// returns e.g. { \"label\": \"PAM\", ...} or [{ \"label\": \"PAM\", ...}, { \"label\": \"PAM\", ...}]\n\nGetIndexByLabel( \"PAM\", json, true );\n// returns e.g. [{ \"label\": \"PAM\", ...}] or [{ \"label\": \"PAM\", ...}, { \"label\": \"PAM\", ...}]",
        "lineNumber": 11
      }
    ],
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 17,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 19,
          "column": 0
        },
        "end": {
          "line": 36,
          "column": 1
        }
      },
      "file": "/Users/kuhlgert/helpers/src/GetProtocolByLabel.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "GetIndexByLabel( \"PAM\", json );\n// returns e.g. { \"label\": \"PAM\", ...} or [{ \"label\": \"PAM\", ...}, { \"label\": \"PAM\", ...}]\n\nGetIndexByLabel( \"PAM\", json, true );\n// returns e.g. [{ \"label\": \"PAM\", ...}] or [{ \"label\": \"PAM\", ...}, { \"label\": \"PAM\", ...}]"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "label",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The label from the protocol set"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "json",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Required! The protocol content"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "param",
        "name": "array",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Always return an array"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "boolean"
        },
        "default": "false"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Single protocol or an array of protocols"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Object"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "Object"
                }
              ]
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "function",
    "name": "GetProtocolByLabel",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "GetProtocolByLabel",
        "kind": "function"
      }
    ],
    "namespace": "GetProtocolByLabel"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Add an Info Message for the User.\nUse these messages to give additional information (if necessary)."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "access",
        "description": null,
        "lineNumber": 3,
        "access": "public"
      },
      {
        "title": "function",
        "description": null,
        "lineNumber": 4,
        "name": null
      },
      {
        "title": "param",
        "description": "Info Message",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "msg"
      },
      {
        "title": "param",
        "description": "object that is returned at the end",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "output"
      },
      {
        "title": "returns",
        "description": "pushes the message into the output object.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      },
      {
        "title": "example",
        "description": "info('Your Info Message', output);\n// output['messages']['info']['Your Info Message']",
        "lineNumber": 8
      }
    ],
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 11,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 13,
          "column": 0
        },
        "end": {
          "line": 19,
          "column": 1
        }
      },
      "file": "/Users/kuhlgert/helpers/src/Message.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "info('Your Info Message', output);\n// output['messages']['info']['Your Info Message']"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "msg",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Info Message"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "output",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "object that is returned at the end"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "pushes the message into the output object."
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "function",
    "name": "info",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "info",
        "kind": "function"
      }
    ],
    "namespace": "info"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Math.abs(x) returns the absolute value of x."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "see",
        "description": "{@link https://www.w3schools.com/jsref/jsref_abs.asp}",
        "lineNumber": 2
      },
      {
        "title": "access",
        "description": null,
        "lineNumber": 3,
        "access": "public"
      },
      {
        "title": "function",
        "description": null,
        "lineNumber": 4,
        "name": null
      },
      {
        "title": "name",
        "description": null,
        "lineNumber": 5,
        "name": "Math.abs"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "x"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "example",
        "description": "Math.abs(4.7);\n// returns 5\nMath.abs(4.4);\n// returns 4;",
        "lineNumber": 8
      }
    ],
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 13,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 307,
          "column": 3
        }
      },
      "file": "/Users/kuhlgert/helpers/src/native_functions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "Math.abs(4.7);\n// returns 5\nMath.abs(4.4);\n// returns 4;"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "x",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "sees": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "link",
                  "url": "https://www.w3schools.com/jsref/jsref_abs.asp",
                  "title": null,
                  "jsdoc": true,
                  "children": [
                    {
                      "type": "text",
                      "value": "https://www.w3schools.com/jsref/jsref_abs.asp"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "title": "sees"
      }
    ],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "function",
    "name": "Math.abs",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Math.abs",
        "kind": "function"
      }
    ],
    "namespace": "Math.abs"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Math.acos(x) returns the arccosine of x, in radians."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "see",
        "description": "{@link https://www.w3schools.com/jsref/jsref_acos.asp}",
        "lineNumber": 2
      },
      {
        "title": "access",
        "description": null,
        "lineNumber": 3,
        "access": "public"
      },
      {
        "title": "function",
        "description": null,
        "lineNumber": 4,
        "name": null
      },
      {
        "title": "name",
        "description": null,
        "lineNumber": 5,
        "name": "Math.acos"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "x"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "example",
        "description": "Math.acos(0.5);\n// returns 1.0471975511965979",
        "lineNumber": 8
      }
    ],
    "loc": {
      "start": {
        "line": 15,
        "column": 0
      },
      "end": {
        "line": 25,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 307,
          "column": 3
        }
      },
      "file": "/Users/kuhlgert/helpers/src/native_functions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "Math.acos(0.5);\n// returns 1.0471975511965979"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "x",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "sees": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "link",
                  "url": "https://www.w3schools.com/jsref/jsref_acos.asp",
                  "title": null,
                  "jsdoc": true,
                  "children": [
                    {
                      "type": "text",
                      "value": "https://www.w3schools.com/jsref/jsref_acos.asp"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "title": "sees"
      }
    ],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "function",
    "name": "Math.acos",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Math.acos",
        "kind": "function"
      }
    ],
    "namespace": "Math.acos"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Math.asin(x) returns the arcsine of x, in radians."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "see",
        "description": "{@link https://www.w3schools.com/jsref/jsref_asin.asp}",
        "lineNumber": 2
      },
      {
        "title": "access",
        "description": null,
        "lineNumber": 3,
        "access": "public"
      },
      {
        "title": "function",
        "description": null,
        "lineNumber": 4,
        "name": null
      },
      {
        "title": "name",
        "description": null,
        "lineNumber": 5,
        "name": "Math.asin"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "x"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "example",
        "description": "Math.asin(0.5);\n// returns 0.5235987755982989",
        "lineNumber": 8
      }
    ],
    "loc": {
      "start": {
        "line": 27,
        "column": 0
      },
      "end": {
        "line": 37,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 307,
          "column": 3
        }
      },
      "file": "/Users/kuhlgert/helpers/src/native_functions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "Math.asin(0.5);\n// returns 0.5235987755982989"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "x",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "sees": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "link",
                  "url": "https://www.w3schools.com/jsref/jsref_asin.asp",
                  "title": null,
                  "jsdoc": true,
                  "children": [
                    {
                      "type": "text",
                      "value": "https://www.w3schools.com/jsref/jsref_asin.asp"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "title": "sees"
      }
    ],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "function",
    "name": "Math.asin",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Math.asin",
        "kind": "function"
      }
    ],
    "namespace": "Math.asin"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Math.atan(x) returns the arctangent of x as a numeric value between -PI/2 and PI/2 radians."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "see",
        "description": "{@link https://www.w3schools.com/jsref/jsref_atan.asp}",
        "lineNumber": 2
      },
      {
        "title": "access",
        "description": null,
        "lineNumber": 3,
        "access": "public"
      },
      {
        "title": "function",
        "description": null,
        "lineNumber": 4,
        "name": null
      },
      {
        "title": "name",
        "description": null,
        "lineNumber": 5,
        "name": "Math.atan"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "x"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "example",
        "description": "Math.atan(0.5);\n// returns 0.4636476090008061",
        "lineNumber": 8
      }
    ],
    "loc": {
      "start": {
        "line": 39,
        "column": 0
      },
      "end": {
        "line": 49,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 307,
          "column": 3
        }
      },
      "file": "/Users/kuhlgert/helpers/src/native_functions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "Math.atan(0.5);\n// returns 0.4636476090008061"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "x",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "sees": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "link",
                  "url": "https://www.w3schools.com/jsref/jsref_atan.asp",
                  "title": null,
                  "jsdoc": true,
                  "children": [
                    {
                      "type": "text",
                      "value": "https://www.w3schools.com/jsref/jsref_atan.asp"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "title": "sees"
      }
    ],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "function",
    "name": "Math.atan",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Math.atan",
        "kind": "function"
      }
    ],
    "namespace": "Math.atan"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Math.atan2(y, x) returns the arctangent of the quotient of its arguments."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "see",
        "description": "{@link https://www.w3schools.com/jsref/jsref_atan2.asp}",
        "lineNumber": 2
      },
      {
        "title": "access",
        "description": null,
        "lineNumber": 3,
        "access": "public"
      },
      {
        "title": "function",
        "description": null,
        "lineNumber": 4,
        "name": null
      },
      {
        "title": "name",
        "description": null,
        "lineNumber": 5,
        "name": "Math.atan2"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "x"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "y"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "example",
        "description": "Math.atan2(0.5,2);\n// returns 0.24497866312686414",
        "lineNumber": 9
      }
    ],
    "loc": {
      "start": {
        "line": 51,
        "column": 0
      },
      "end": {
        "line": 62,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 307,
          "column": 3
        }
      },
      "file": "/Users/kuhlgert/helpers/src/native_functions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "Math.atan2(0.5,2);\n// returns 0.24497866312686414"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "x",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "param",
        "name": "y",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "sees": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "link",
                  "url": "https://www.w3schools.com/jsref/jsref_atan2.asp",
                  "title": null,
                  "jsdoc": true,
                  "children": [
                    {
                      "type": "text",
                      "value": "https://www.w3schools.com/jsref/jsref_atan2.asp"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "title": "sees"
      }
    ],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "function",
    "name": "Math.atan2",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Math.atan2",
        "kind": "function"
      }
    ],
    "namespace": "Math.atan2"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Math.ceil(x) returns the value of x rounded up to its nearest integer."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "see",
        "description": "{@link https://www.w3schools.com/jsref/jsref_ceil.asp}",
        "lineNumber": 2
      },
      {
        "title": "access",
        "description": null,
        "lineNumber": 3,
        "access": "public"
      },
      {
        "title": "function",
        "description": null,
        "lineNumber": 4,
        "name": null
      },
      {
        "title": "name",
        "description": null,
        "lineNumber": 5,
        "name": "Math.ceil"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "x"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "example",
        "description": "Math.ceil(4.7);\n// returns 5",
        "lineNumber": 8
      }
    ],
    "loc": {
      "start": {
        "line": 64,
        "column": 0
      },
      "end": {
        "line": 74,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 307,
          "column": 3
        }
      },
      "file": "/Users/kuhlgert/helpers/src/native_functions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "Math.ceil(4.7);\n// returns 5"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "x",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "sees": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "link",
                  "url": "https://www.w3schools.com/jsref/jsref_ceil.asp",
                  "title": null,
                  "jsdoc": true,
                  "children": [
                    {
                      "type": "text",
                      "value": "https://www.w3schools.com/jsref/jsref_ceil.asp"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "title": "sees"
      }
    ],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "function",
    "name": "Math.ceil",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Math.ceil",
        "kind": "function"
      }
    ],
    "namespace": "Math.ceil"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Math.cos(x) returns the cosine of x (x is in radians)."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "see",
        "description": "{@link https://www.w3schools.com/jsref/jsref_cos.asp}",
        "lineNumber": 2
      },
      {
        "title": "access",
        "description": null,
        "lineNumber": 3,
        "access": "public"
      },
      {
        "title": "function",
        "description": null,
        "lineNumber": 4,
        "name": null
      },
      {
        "title": "name",
        "description": null,
        "lineNumber": 5,
        "name": "Math.cos"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "x"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "example",
        "description": "Math.cos(1);\n// returns 0.5403023058681398",
        "lineNumber": 8
      }
    ],
    "loc": {
      "start": {
        "line": 76,
        "column": 0
      },
      "end": {
        "line": 86,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 307,
          "column": 3
        }
      },
      "file": "/Users/kuhlgert/helpers/src/native_functions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "Math.cos(1);\n// returns 0.5403023058681398"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "x",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "sees": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "link",
                  "url": "https://www.w3schools.com/jsref/jsref_cos.asp",
                  "title": null,
                  "jsdoc": true,
                  "children": [
                    {
                      "type": "text",
                      "value": "https://www.w3schools.com/jsref/jsref_cos.asp"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "title": "sees"
      }
    ],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "function",
    "name": "Math.cos",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Math.cos",
        "kind": "function"
      }
    ],
    "namespace": "Math.cos"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Euler's number (approx. 2.718)."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "see",
        "description": "{@link https://www.w3schools.com/jsref/jsref_e.asp}",
        "lineNumber": 2
      },
      {
        "title": "access",
        "description": null,
        "lineNumber": 3,
        "access": "public"
      },
      {
        "title": "constant",
        "description": null,
        "lineNumber": 4,
        "type": null,
        "name": null
      },
      {
        "title": "name",
        "description": null,
        "lineNumber": 5,
        "name": "Math.E"
      },
      {
        "title": "returns",
        "description": "2.718281828459045",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "example",
        "description": "Math.E;\n// returns 2.718281828459045",
        "lineNumber": 7
      }
    ],
    "loc": {
      "start": {
        "line": 210,
        "column": 0
      },
      "end": {
        "line": 219,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 307,
          "column": 3
        }
      },
      "file": "/Users/kuhlgert/helpers/src/native_functions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "Math.E;\n// returns 2.718281828459045"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "2.718281828459045"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "sees": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "link",
                  "url": "https://www.w3schools.com/jsref/jsref_e.asp",
                  "title": null,
                  "jsdoc": true,
                  "children": [
                    {
                      "type": "text",
                      "value": "https://www.w3schools.com/jsref/jsref_e.asp"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "title": "sees"
      }
    ],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "constant",
    "name": "Math.E",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Math.E",
        "kind": "constant"
      }
    ],
    "namespace": "Math.E"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Math.exp(x) returns the value of Ex."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "see",
        "description": "{@link https://www.w3schools.com/jsref/jsref_exp.asp}",
        "lineNumber": 2
      },
      {
        "title": "access",
        "description": null,
        "lineNumber": 3,
        "access": "public"
      },
      {
        "title": "function",
        "description": null,
        "lineNumber": 4,
        "name": null
      },
      {
        "title": "name",
        "description": null,
        "lineNumber": 5,
        "name": "Math.exp"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "x"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "example",
        "description": "Math.exp(3);\n// returns 20.085536923187668",
        "lineNumber": 8
      }
    ],
    "loc": {
      "start": {
        "line": 88,
        "column": 0
      },
      "end": {
        "line": 98,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 307,
          "column": 3
        }
      },
      "file": "/Users/kuhlgert/helpers/src/native_functions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "Math.exp(3);\n// returns 20.085536923187668"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "x",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "sees": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "link",
                  "url": "https://www.w3schools.com/jsref/jsref_exp.asp",
                  "title": null,
                  "jsdoc": true,
                  "children": [
                    {
                      "type": "text",
                      "value": "https://www.w3schools.com/jsref/jsref_exp.asp"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "title": "sees"
      }
    ],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "function",
    "name": "Math.exp",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Math.exp",
        "kind": "function"
      }
    ],
    "namespace": "Math.exp"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Math.floor(x) returns the value of x rounded down to its nearest integer."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "see",
        "description": "{@link https://www.w3schools.com/jsref/jsref_floor.asp}",
        "lineNumber": 2
      },
      {
        "title": "access",
        "description": null,
        "lineNumber": 3,
        "access": "public"
      },
      {
        "title": "function",
        "description": null,
        "lineNumber": 4,
        "name": null
      },
      {
        "title": "name",
        "description": null,
        "lineNumber": 5,
        "name": "Math.floor"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "x"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "example",
        "description": "Math.floor(4.7);\n// returns 4",
        "lineNumber": 8
      }
    ],
    "loc": {
      "start": {
        "line": 100,
        "column": 0
      },
      "end": {
        "line": 110,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 307,
          "column": 3
        }
      },
      "file": "/Users/kuhlgert/helpers/src/native_functions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "Math.floor(4.7);\n// returns 4"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "x",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "sees": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "link",
                  "url": "https://www.w3schools.com/jsref/jsref_floor.asp",
                  "title": null,
                  "jsdoc": true,
                  "children": [
                    {
                      "type": "text",
                      "value": "https://www.w3schools.com/jsref/jsref_floor.asp"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "title": "sees"
      }
    ],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "function",
    "name": "Math.floor",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Math.floor",
        "kind": "function"
      }
    ],
    "namespace": "Math.floor"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Natural logarithm of 10 (approx. 2.302)."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "see",
        "description": "{@link https://www.w3schools.com/jsref/jsref_ln10.asp}",
        "lineNumber": 2
      },
      {
        "title": "access",
        "description": null,
        "lineNumber": 3,
        "access": "public"
      },
      {
        "title": "constant",
        "description": null,
        "lineNumber": 4,
        "type": null,
        "name": null
      },
      {
        "title": "name",
        "description": null,
        "lineNumber": 5,
        "name": "Math.LN10"
      },
      {
        "title": "returns",
        "description": "2.302585092994046",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "example",
        "description": "Math.LN10;\n// returns 2.302585092994046",
        "lineNumber": 7
      }
    ],
    "loc": {
      "start": {
        "line": 232,
        "column": 0
      },
      "end": {
        "line": 241,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 307,
          "column": 3
        }
      },
      "file": "/Users/kuhlgert/helpers/src/native_functions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "Math.LN10;\n// returns 2.302585092994046"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "2.302585092994046"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "sees": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "link",
                  "url": "https://www.w3schools.com/jsref/jsref_ln10.asp",
                  "title": null,
                  "jsdoc": true,
                  "children": [
                    {
                      "type": "text",
                      "value": "https://www.w3schools.com/jsref/jsref_ln10.asp"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "title": "sees"
      }
    ],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "constant",
    "name": "Math.LN10",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Math.LN10",
        "kind": "constant"
      }
    ],
    "namespace": "Math.LN10"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Natural logarithm of 2 (approx. 0.693)."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "see",
        "description": "{@link https://www.w3schools.com/jsref/jsref_ln2.asp}",
        "lineNumber": 2
      },
      {
        "title": "access",
        "description": null,
        "lineNumber": 3,
        "access": "public"
      },
      {
        "title": "constant",
        "description": null,
        "lineNumber": 4,
        "type": null,
        "name": null
      },
      {
        "title": "name",
        "description": null,
        "lineNumber": 5,
        "name": "Math.LN2"
      },
      {
        "title": "returns",
        "description": "0.6931471805599453",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "example",
        "description": "Math.LN2;\n// returns 0.6931471805599453",
        "lineNumber": 7
      }
    ],
    "loc": {
      "start": {
        "line": 221,
        "column": 0
      },
      "end": {
        "line": 230,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 307,
          "column": 3
        }
      },
      "file": "/Users/kuhlgert/helpers/src/native_functions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "Math.LN2;\n// returns 0.6931471805599453"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "0.6931471805599453"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "sees": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "link",
                  "url": "https://www.w3schools.com/jsref/jsref_ln2.asp",
                  "title": null,
                  "jsdoc": true,
                  "children": [
                    {
                      "type": "text",
                      "value": "https://www.w3schools.com/jsref/jsref_ln2.asp"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "title": "sees"
      }
    ],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "constant",
    "name": "Math.LN2",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Math.LN2",
        "kind": "constant"
      }
    ],
    "namespace": "Math.LN2"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Math.log(x) returns the natural logarithm (base E) of x."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "see",
        "description": "{@link https://www.w3schools.com/jsref/jsref_log.asp}",
        "lineNumber": 2
      },
      {
        "title": "access",
        "description": null,
        "lineNumber": 3,
        "access": "public"
      },
      {
        "title": "function",
        "description": null,
        "lineNumber": 4,
        "name": null
      },
      {
        "title": "name",
        "description": null,
        "lineNumber": 5,
        "name": "Math.log"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "x"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "example",
        "description": "Math.log(4.7);\n// returns 1.547562508716013",
        "lineNumber": 8
      }
    ],
    "loc": {
      "start": {
        "line": 112,
        "column": 0
      },
      "end": {
        "line": 122,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 307,
          "column": 3
        }
      },
      "file": "/Users/kuhlgert/helpers/src/native_functions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "Math.log(4.7);\n// returns 1.547562508716013"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "x",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "sees": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "link",
                  "url": "https://www.w3schools.com/jsref/jsref_log.asp",
                  "title": null,
                  "jsdoc": true,
                  "children": [
                    {
                      "type": "text",
                      "value": "https://www.w3schools.com/jsref/jsref_log.asp"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "title": "sees"
      }
    ],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "function",
    "name": "Math.log",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Math.log",
        "kind": "function"
      }
    ],
    "namespace": "Math.log"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Base-10 logarithm of E (approx. 0.434)."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "see",
        "description": "{@link https://www.w3schools.com/jsref/jsref_log10e.asp}",
        "lineNumber": 2
      },
      {
        "title": "access",
        "description": null,
        "lineNumber": 3,
        "access": "public"
      },
      {
        "title": "constant",
        "description": null,
        "lineNumber": 4,
        "type": null,
        "name": null
      },
      {
        "title": "name",
        "description": null,
        "lineNumber": 5,
        "name": "Math.LOG10E"
      },
      {
        "title": "returns",
        "description": "0.4342944819032518",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "example",
        "description": "Math.LOG10E;\n// returns 0.4342944819032518",
        "lineNumber": 7
      }
    ],
    "loc": {
      "start": {
        "line": 254,
        "column": 0
      },
      "end": {
        "line": 263,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 307,
          "column": 3
        }
      },
      "file": "/Users/kuhlgert/helpers/src/native_functions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "Math.LOG10E;\n// returns 0.4342944819032518"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "0.4342944819032518"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "sees": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "link",
                  "url": "https://www.w3schools.com/jsref/jsref_log10e.asp",
                  "title": null,
                  "jsdoc": true,
                  "children": [
                    {
                      "type": "text",
                      "value": "https://www.w3schools.com/jsref/jsref_log10e.asp"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "title": "sees"
      }
    ],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "constant",
    "name": "Math.LOG10E",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Math.LOG10E",
        "kind": "constant"
      }
    ],
    "namespace": "Math.LOG10E"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Base-2 logarithm of E (approx. 1.442)."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "see",
        "description": "{@link https://www.w3schools.com/jsref/jsref_log2e.asp}",
        "lineNumber": 2
      },
      {
        "title": "access",
        "description": null,
        "lineNumber": 3,
        "access": "public"
      },
      {
        "title": "constant",
        "description": null,
        "lineNumber": 4,
        "type": null,
        "name": null
      },
      {
        "title": "name",
        "description": null,
        "lineNumber": 5,
        "name": "Math.LOG2E"
      },
      {
        "title": "returns",
        "description": "1.4426950408889634",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "example",
        "description": "Math.LOG2E;\n// returns 1.4426950408889634",
        "lineNumber": 7
      }
    ],
    "loc": {
      "start": {
        "line": 243,
        "column": 0
      },
      "end": {
        "line": 252,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 307,
          "column": 3
        }
      },
      "file": "/Users/kuhlgert/helpers/src/native_functions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "Math.LOG2E;\n// returns 1.4426950408889634"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "1.4426950408889634"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "sees": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "link",
                  "url": "https://www.w3schools.com/jsref/jsref_log2e.asp",
                  "title": null,
                  "jsdoc": true,
                  "children": [
                    {
                      "type": "text",
                      "value": "https://www.w3schools.com/jsref/jsref_log2e.asp"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "title": "sees"
      }
    ],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "constant",
    "name": "Math.LOG2E",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Math.LOG2E",
        "kind": "constant"
      }
    ],
    "namespace": "Math.LOG2E"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Math.max(x, y, z, ..., n) returns the number with the highest value."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "see",
        "description": "{@link https://www.w3schools.com/jsref/jsref_max.asp}",
        "lineNumber": 2
      },
      {
        "title": "access",
        "description": null,
        "lineNumber": 3,
        "access": "public"
      },
      {
        "title": "function",
        "description": null,
        "lineNumber": 4,
        "name": null
      },
      {
        "title": "name",
        "description": null,
        "lineNumber": 5,
        "name": "Math.max"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "x"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "example",
        "description": "Math.max(0, 150, 30, 20, -8, -200);\n// returns 150",
        "lineNumber": 8
      }
    ],
    "loc": {
      "start": {
        "line": 124,
        "column": 0
      },
      "end": {
        "line": 134,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 307,
          "column": 3
        }
      },
      "file": "/Users/kuhlgert/helpers/src/native_functions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "Math.max(0, 150, 30, 20, -8, -200);\n// returns 150"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "x",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "sees": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "link",
                  "url": "https://www.w3schools.com/jsref/jsref_max.asp",
                  "title": null,
                  "jsdoc": true,
                  "children": [
                    {
                      "type": "text",
                      "value": "https://www.w3schools.com/jsref/jsref_max.asp"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "title": "sees"
      }
    ],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "function",
    "name": "Math.max",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Math.max",
        "kind": "function"
      }
    ],
    "namespace": "Math.max"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Math.min(x, y, z, ..., n) returns the number with the lowest value."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "see",
        "description": "{@link https://www.w3schools.com/jsref/jsref_min.asp}",
        "lineNumber": 2
      },
      {
        "title": "access",
        "description": null,
        "lineNumber": 3,
        "access": "public"
      },
      {
        "title": "function",
        "description": null,
        "lineNumber": 4,
        "name": null
      },
      {
        "title": "name",
        "description": null,
        "lineNumber": 5,
        "name": "Math.min"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "x"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "example",
        "description": "Math.min(0, 150, 30, 20, -8, -200);\n// returns -200",
        "lineNumber": 8
      }
    ],
    "loc": {
      "start": {
        "line": 136,
        "column": 0
      },
      "end": {
        "line": 146,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 307,
          "column": 3
        }
      },
      "file": "/Users/kuhlgert/helpers/src/native_functions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "Math.min(0, 150, 30, 20, -8, -200);\n// returns -200"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "x",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "sees": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "link",
                  "url": "https://www.w3schools.com/jsref/jsref_min.asp",
                  "title": null,
                  "jsdoc": true,
                  "children": [
                    {
                      "type": "text",
                      "value": "https://www.w3schools.com/jsref/jsref_min.asp"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "title": "sees"
      }
    ],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "function",
    "name": "Math.min",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Math.min",
        "kind": "function"
      }
    ],
    "namespace": "Math.min"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "PI (approx. 3.14)"
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "see",
        "description": "{@link https://www.w3schools.com/jsref/jsref_pi.asp}",
        "lineNumber": 2
      },
      {
        "title": "access",
        "description": null,
        "lineNumber": 3,
        "access": "public"
      },
      {
        "title": "constant",
        "description": null,
        "lineNumber": 4,
        "type": null,
        "name": null
      },
      {
        "title": "name",
        "description": null,
        "lineNumber": 5,
        "name": "Math.PI"
      },
      {
        "title": "returns",
        "description": "3.141592653589793",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "example",
        "description": "Math.PI;\n// returns 3.141592653589793",
        "lineNumber": 7
      }
    ],
    "loc": {
      "start": {
        "line": 265,
        "column": 0
      },
      "end": {
        "line": 274,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 307,
          "column": 3
        }
      },
      "file": "/Users/kuhlgert/helpers/src/native_functions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "Math.PI;\n// returns 3.141592653589793"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "3.141592653589793"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "sees": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "link",
                  "url": "https://www.w3schools.com/jsref/jsref_pi.asp",
                  "title": null,
                  "jsdoc": true,
                  "children": [
                    {
                      "type": "text",
                      "value": "https://www.w3schools.com/jsref/jsref_pi.asp"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "title": "sees"
      }
    ],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "constant",
    "name": "Math.PI",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Math.PI",
        "kind": "constant"
      }
    ],
    "namespace": "Math.PI"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Math.pow(x, y) returns the value of x to the power of y."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "see",
        "description": "{@link https://www.w3schools.com/jsref/jsref_pow.asp}",
        "lineNumber": 2
      },
      {
        "title": "access",
        "description": null,
        "lineNumber": 3,
        "access": "public"
      },
      {
        "title": "function",
        "description": null,
        "lineNumber": 4,
        "name": null
      },
      {
        "title": "name",
        "description": null,
        "lineNumber": 5,
        "name": "Math.pow"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "x"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "y"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "example",
        "description": "Math.pow(3,2);\n// returns 9",
        "lineNumber": 9
      }
    ],
    "loc": {
      "start": {
        "line": 148,
        "column": 0
      },
      "end": {
        "line": 159,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 307,
          "column": 3
        }
      },
      "file": "/Users/kuhlgert/helpers/src/native_functions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "Math.pow(3,2);\n// returns 9"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "x",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "param",
        "name": "y",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "sees": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "link",
                  "url": "https://www.w3schools.com/jsref/jsref_pow.asp",
                  "title": null,
                  "jsdoc": true,
                  "children": [
                    {
                      "type": "text",
                      "value": "https://www.w3schools.com/jsref/jsref_pow.asp"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "title": "sees"
      }
    ],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "function",
    "name": "Math.pow",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Math.pow",
        "kind": "function"
      }
    ],
    "namespace": "Math.pow"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Random number"
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "see",
        "description": "{@link https://www.w3schools.com/jsref/jsref_random.asp}",
        "lineNumber": 2
      },
      {
        "title": "access",
        "description": null,
        "lineNumber": 3,
        "access": "public"
      },
      {
        "title": "function",
        "description": null,
        "lineNumber": 4,
        "name": null
      },
      {
        "title": "name",
        "description": null,
        "lineNumber": 5,
        "name": "Math.random"
      },
      {
        "title": "returns",
        "description": "between 0 and 1",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "example",
        "description": "Math.random();\n// returns a random number",
        "lineNumber": 7
      }
    ],
    "loc": {
      "start": {
        "line": 298,
        "column": 0
      },
      "end": {
        "line": 307,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 307,
          "column": 3
        }
      },
      "file": "/Users/kuhlgert/helpers/src/native_functions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "Math.random();\n// returns a random number"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "between 0 and 1"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "sees": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "link",
                  "url": "https://www.w3schools.com/jsref/jsref_random.asp",
                  "title": null,
                  "jsdoc": true,
                  "children": [
                    {
                      "type": "text",
                      "value": "https://www.w3schools.com/jsref/jsref_random.asp"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "title": "sees"
      }
    ],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "function",
    "name": "Math.random",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Math.random",
        "kind": "function"
      }
    ],
    "namespace": "Math.random"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Math.round(x) returns the value of x rounded to its nearest integer."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "see",
        "description": "{@link https://www.w3schools.com/jsref/jsref_round.asp}",
        "lineNumber": 2
      },
      {
        "title": "access",
        "description": null,
        "lineNumber": 3,
        "access": "public"
      },
      {
        "title": "function",
        "description": null,
        "lineNumber": 4,
        "name": null
      },
      {
        "title": "name",
        "description": null,
        "lineNumber": 5,
        "name": "Math.round"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "x"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "example",
        "description": "Math.round(4.7);\n// returns 5\n// Math.round(4.4);\n// returns 4",
        "lineNumber": 8
      }
    ],
    "loc": {
      "start": {
        "line": 161,
        "column": 0
      },
      "end": {
        "line": 173,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 307,
          "column": 3
        }
      },
      "file": "/Users/kuhlgert/helpers/src/native_functions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "Math.round(4.7);\n// returns 5\n// Math.round(4.4);\n// returns 4"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "x",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "sees": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "link",
                  "url": "https://www.w3schools.com/jsref/jsref_round.asp",
                  "title": null,
                  "jsdoc": true,
                  "children": [
                    {
                      "type": "text",
                      "value": "https://www.w3schools.com/jsref/jsref_round.asp"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "title": "sees"
      }
    ],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "function",
    "name": "Math.round",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Math.round",
        "kind": "function"
      }
    ],
    "namespace": "Math.round"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Math.sin(x) returns the sine of x (x is in radians)."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "see",
        "description": "{@link https://www.w3schools.com/jsref/jsref_sin.asp}",
        "lineNumber": 2
      },
      {
        "title": "access",
        "description": null,
        "lineNumber": 3,
        "access": "public"
      },
      {
        "title": "name",
        "description": null,
        "lineNumber": 4,
        "name": "Math.sin"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "x"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "example",
        "description": "Math.sin(1);\n// returns 0.8414709848078965",
        "lineNumber": 7
      }
    ],
    "loc": {
      "start": {
        "line": 175,
        "column": 0
      },
      "end": {
        "line": 184,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 307,
          "column": 3
        }
      },
      "file": "/Users/kuhlgert/helpers/src/native_functions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "Math.sin(1);\n// returns 0.8414709848078965"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "x",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "sees": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "link",
                  "url": "https://www.w3schools.com/jsref/jsref_sin.asp",
                  "title": null,
                  "jsdoc": true,
                  "children": [
                    {
                      "type": "text",
                      "value": "https://www.w3schools.com/jsref/jsref_sin.asp"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "title": "sees"
      }
    ],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "name": "Math.sin",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Math.sin"
      }
    ],
    "namespace": "Math.sin"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Math.sqrt(x) returns the square root of x."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "see",
        "description": "{@link https://www.w3schools.com/jsref/jsref_sqrt.asp}",
        "lineNumber": 2
      },
      {
        "title": "access",
        "description": null,
        "lineNumber": 3,
        "access": "public"
      },
      {
        "title": "function",
        "description": null,
        "lineNumber": 4,
        "name": null
      },
      {
        "title": "name",
        "description": null,
        "lineNumber": 5,
        "name": "Math.sqrt"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "x"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "example",
        "description": "Math.sqrt(2);\n// returns 1.4142135623730951",
        "lineNumber": 8
      }
    ],
    "loc": {
      "start": {
        "line": 186,
        "column": 0
      },
      "end": {
        "line": 196,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 307,
          "column": 3
        }
      },
      "file": "/Users/kuhlgert/helpers/src/native_functions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "Math.sqrt(2);\n// returns 1.4142135623730951"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "x",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "sees": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "link",
                  "url": "https://www.w3schools.com/jsref/jsref_sqrt.asp",
                  "title": null,
                  "jsdoc": true,
                  "children": [
                    {
                      "type": "text",
                      "value": "https://www.w3schools.com/jsref/jsref_sqrt.asp"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "title": "sees"
      }
    ],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "function",
    "name": "Math.sqrt",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Math.sqrt",
        "kind": "function"
      }
    ],
    "namespace": "Math.sqrt"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Square root of 1/2 (approx. 0.707)."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "see",
        "description": "{@link https://www.w3schools.com/jsref/jsref_sqrt1_2.asp}",
        "lineNumber": 2
      },
      {
        "title": "access",
        "description": null,
        "lineNumber": 3,
        "access": "public"
      },
      {
        "title": "constant",
        "description": null,
        "lineNumber": 4,
        "type": null,
        "name": null
      },
      {
        "title": "name",
        "description": null,
        "lineNumber": 5,
        "name": "Math.SQRT1_2"
      },
      {
        "title": "returns",
        "description": "0.7071067811865476",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "example",
        "description": "Math.SQRT1_2;\n// returns 0.7071067811865476",
        "lineNumber": 7
      }
    ],
    "loc": {
      "start": {
        "line": 276,
        "column": 0
      },
      "end": {
        "line": 285,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 307,
          "column": 3
        }
      },
      "file": "/Users/kuhlgert/helpers/src/native_functions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "Math.SQRT1_2;\n// returns 0.7071067811865476"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "0.7071067811865476"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "sees": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "link",
                  "url": "https://www.w3schools.com/jsref/jsref_sqrt1_2.asp",
                  "title": null,
                  "jsdoc": true,
                  "children": [
                    {
                      "type": "text",
                      "value": "https://www.w3schools.com/jsref/jsref_sqrt1_2.asp"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "title": "sees"
      }
    ],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "constant",
    "name": "Math.SQRT1_2",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Math.SQRT1_2",
        "kind": "constant"
      }
    ],
    "namespace": "Math.SQRT1_2"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Square root of 2 (approx. 1.414)."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "see",
        "description": "{@link https://www.w3schools.com/jsref/jsref_sqrt2.asp}",
        "lineNumber": 2
      },
      {
        "title": "access",
        "description": null,
        "lineNumber": 3,
        "access": "public"
      },
      {
        "title": "constant",
        "description": null,
        "lineNumber": 4,
        "type": null,
        "name": null
      },
      {
        "title": "name",
        "description": null,
        "lineNumber": 5,
        "name": "Math.SQRT2"
      },
      {
        "title": "returns",
        "description": "1.4142135623730951",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "example",
        "description": "Math.SQRT2;\n// returns 1.4142135623730951",
        "lineNumber": 7
      }
    ],
    "loc": {
      "start": {
        "line": 287,
        "column": 0
      },
      "end": {
        "line": 296,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 307,
          "column": 3
        }
      },
      "file": "/Users/kuhlgert/helpers/src/native_functions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "Math.SQRT2;\n// returns 1.4142135623730951"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "1.4142135623730951"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "sees": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "link",
                  "url": "https://www.w3schools.com/jsref/jsref_sqrt2.asp",
                  "title": null,
                  "jsdoc": true,
                  "children": [
                    {
                      "type": "text",
                      "value": "https://www.w3schools.com/jsref/jsref_sqrt2.asp"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "title": "sees"
      }
    ],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "constant",
    "name": "Math.SQRT2",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Math.SQRT2",
        "kind": "constant"
      }
    ],
    "namespace": "Math.SQRT2"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Math.tan(x) returns the tangent of an angle."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "see",
        "description": "{@link https://www.w3schools.com/jsref/jsref_tan.asp}",
        "lineNumber": 2
      },
      {
        "title": "access",
        "description": null,
        "lineNumber": 3,
        "access": "public"
      },
      {
        "title": "function",
        "description": null,
        "lineNumber": 4,
        "name": null
      },
      {
        "title": "name",
        "description": null,
        "lineNumber": 5,
        "name": "Math.tan"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "x"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "example",
        "description": "Math.tan(1);\n// returns 1.5574077246549023",
        "lineNumber": 8
      }
    ],
    "loc": {
      "start": {
        "line": 198,
        "column": 0
      },
      "end": {
        "line": 208,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 307,
          "column": 3
        }
      },
      "file": "/Users/kuhlgert/helpers/src/native_functions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "Math.tan(1);\n// returns 1.5574077246549023"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "x",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "sees": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "link",
                  "url": "https://www.w3schools.com/jsref/jsref_tan.asp",
                  "title": null,
                  "jsdoc": true,
                  "children": [
                    {
                      "type": "text",
                      "value": "https://www.w3schools.com/jsref/jsref_tan.asp"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "title": "sees"
      }
    ],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "function",
    "name": "Math.tan",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Math.tan",
        "kind": "function"
      }
    ],
    "namespace": "Math.tan"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Fit exponential decay to Y = Y0 + Ae^(-x/t)\nA and t are the fitted variables, the provided input array needs to be an array of x,y pairs."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "access",
        "description": null,
        "lineNumber": 3,
        "access": "public"
      },
      {
        "title": "function",
        "description": null,
        "lineNumber": 4,
        "name": null
      },
      {
        "title": "param",
        "description": "Input x,y value pairs [ [x1,y1], [x2,y2], ..., [xn,yn] ].",
        "lineNumber": 5,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "array"
            }
          ]
        },
        "name": "input_raw"
      },
      {
        "title": "returns",
        "description": "Results from fit including points, values for A and t, error, asymptote, rsquared, lifetime, slope.",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      },
      {
        "title": "example",
        "description": "MathEXPINVREG( [ [x1,y1], [x2,y2], ..., [xn,yn] ] );\n// returns\n{\n  \"points\": [ [x1,y1], [x2,y2], ..., [xn,yn] ],\n\t \"results\": [A, t],\n\t \"error\": yError,\n  \"asymptote\": asymptote,\n  \"rsquared\": linReg.rsquared,\n  \"lifetime\": lifetime,\n\t \"slope\": slope\n}",
        "lineNumber": 7
      }
    ],
    "loc": {
      "start": {
        "line": 98,
        "column": 0
      },
      "end": {
        "line": 116,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 117,
          "column": 0
        },
        "end": {
          "line": 209,
          "column": 1
        }
      },
      "file": "/Users/kuhlgert/helpers/src/additional_functions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "MathEXPINVREG( [ [x1,y1], [x2,y2], ..., [xn,yn] ] );\n// returns\n{\n  \"points\": [ [x1,y1], [x2,y2], ..., [xn,yn] ],\n\t \"results\": [A, t],\n\t \"error\": yError,\n  \"asymptote\": asymptote,\n  \"rsquared\": linReg.rsquared,\n  \"lifetime\": lifetime,\n\t \"slope\": slope\n}"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "input_raw",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Input x,y value pairs [ [x1,y1], [x2,y2], ..., [xn,yn] ]."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "array"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Results from fit including points, values for A and t, error, asymptote, rsquared, lifetime, slope."
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "function",
    "name": "MathEXPINVREG",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "MathEXPINVREG",
        "kind": "function"
      }
    ],
    "namespace": "MathEXPINVREG"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Function to perform a simple linear regression (y = mx +b), returning slope, y-intercent,\ncorrelation coefficient (R) and coefficient of determination (R²)."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "access",
        "description": null,
        "lineNumber": 3,
        "access": "public"
      },
      {
        "title": "function",
        "description": null,
        "lineNumber": 4,
        "name": null
      },
      {
        "title": "param",
        "description": "x-values",
        "lineNumber": 5,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "number"
            }
          ]
        },
        "name": "x"
      },
      {
        "title": "param",
        "description": "y-values",
        "lineNumber": 6,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "number"
            }
          ]
        },
        "name": "y"
      },
      {
        "title": "returns",
        "description": "Linear regression results",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      },
      {
        "title": "example",
        "description": "MathLINREG([60,61,62,63,65], [3.1,3.6,3.8,4,4.1]);\n// returns {\n// \t\"m\": 0.188,    // slope\n// \t\"b\": -7.964,   // y intercept\n// \t\"r\": 0.912,    // correlation coefficient\n// \t\"r2\": 0.832    // coefficient of determination\n}",
        "lineNumber": 8
      }
    ],
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 16,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 18,
          "column": 0
        },
        "end": {
          "line": 57,
          "column": 1
        }
      },
      "file": "/Users/kuhlgert/helpers/src/MathLINREG.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "MathLINREG([60,61,62,63,65], [3.1,3.6,3.8,4,4.1]);\n// returns {\n// \t\"m\": 0.188,    // slope\n// \t\"b\": -7.964,   // y intercept\n// \t\"r\": 0.912,    // correlation coefficient\n// \t\"r2\": 0.832    // coefficient of determination\n}"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "x",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "x-values"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "number"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "y",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "y-values"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "number"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Linear regression results"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "function",
    "name": "MathLINREG",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "MathLINREG",
        "kind": "function"
      }
    ],
    "namespace": "MathLINREG"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns the natural logarithm (base E) of a number."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "access",
        "description": null,
        "lineNumber": 2,
        "access": "public"
      },
      {
        "title": "function",
        "description": null,
        "lineNumber": 3,
        "name": null
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "value"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "example",
        "description": "MathLN(10);\n// returns 2.302585092994046",
        "lineNumber": 6
      }
    ],
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 9,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 11,
          "column": 0
        },
        "end": {
          "line": 17,
          "column": 1
        }
      },
      "file": "/Users/kuhlgert/helpers/src/MathLN.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "MathLN(10);\n// returns 2.302585092994046"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "value",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "function",
    "name": "MathLN",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "MathLN",
        "kind": "function"
      }
    ],
    "namespace": "MathLN"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns the logarithm (base 10) of a number."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "access",
        "description": null,
        "lineNumber": 2,
        "access": "public"
      },
      {
        "title": "function",
        "description": null,
        "lineNumber": 3,
        "name": null
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "value"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "example",
        "description": "MathLOG(10);\n// returns 1",
        "lineNumber": 6
      }
    ],
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 9,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 11,
          "column": 0
        },
        "end": {
          "line": 17,
          "column": 1
        }
      },
      "file": "/Users/kuhlgert/helpers/src/MathLOG.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "MathLOG(10);\n// returns 1"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "value",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "function",
    "name": "MathLOG",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "MathLOG",
        "kind": "function"
      }
    ],
    "namespace": "MathLOG"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Get the maximum value from an array of numbers. The function fails\nif the array is empty or has invalid values."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "access",
        "description": null,
        "lineNumber": 3,
        "access": "public"
      },
      {
        "title": "function",
        "description": null,
        "lineNumber": 4,
        "name": null
      },
      {
        "title": "param",
        "description": "numbers",
        "lineNumber": 5,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "number"
            }
          ]
        },
        "name": "values"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "example",
        "description": "MathMAX([1,2,3,4.5]);\n// returns 4.5",
        "lineNumber": 7
      }
    ],
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 10,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 12,
          "column": 0
        },
        "end": {
          "line": 25,
          "column": 1
        }
      },
      "file": "/Users/kuhlgert/helpers/src/MathMAX.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "MathMAX([1,2,3,4.5]);\n// returns 4.5"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "values",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "numbers"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "number"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "function",
    "name": "MathMAX",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "MathMAX",
        "kind": "function"
      }
    ],
    "namespace": "MathMAX"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Calculate the mean from an array of numbers. The function fails\nif the array is empty or has invalid values."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "access",
        "description": null,
        "lineNumber": 3,
        "access": "public"
      },
      {
        "title": "function",
        "description": null,
        "lineNumber": 4,
        "name": null
      },
      {
        "title": "param",
        "description": "numbers",
        "lineNumber": 5,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "number"
            }
          ]
        },
        "name": "values"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "example",
        "description": "MathMEAN([1,2,3,4.5]);\n// returns 2.625",
        "lineNumber": 7
      }
    ],
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 10,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 12,
          "column": 0
        },
        "end": {
          "line": 29,
          "column": 1
        }
      },
      "file": "/Users/kuhlgert/helpers/src/MathMEAN.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "MathMEAN([1,2,3,4.5]);\n// returns 2.625"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "values",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "numbers"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "number"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "function",
    "name": "MathMEAN",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "MathMEAN",
        "kind": "function"
      }
    ],
    "namespace": "MathMEAN"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Calculate the median from an array of numbers. The function fails\nif the array is empty or has invalid values."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "access",
        "description": null,
        "lineNumber": 3,
        "access": "public"
      },
      {
        "title": "function",
        "description": null,
        "lineNumber": 4,
        "name": null
      },
      {
        "title": "param",
        "description": "numbers",
        "lineNumber": 5,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "number"
            }
          ]
        },
        "name": "values"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "example",
        "description": "MathMEDIAN([1,2,3,4.5]);\n// returns 2.5",
        "lineNumber": 7
      }
    ],
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 10,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 12,
          "column": 0
        },
        "end": {
          "line": 46,
          "column": 1
        }
      },
      "file": "/Users/kuhlgert/helpers/src/MathMEDIAN.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "MathMEDIAN([1,2,3,4.5]);\n// returns 2.5"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "values",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "numbers"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "number"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "function",
    "name": "MathMEDIAN",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "MathMEDIAN",
        "kind": "function"
      }
    ],
    "namespace": "MathMEDIAN"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Get the minimum value from an array of numbers. The function fails\nif the array is empty or has invalid values."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "access",
        "description": null,
        "lineNumber": 3,
        "access": "public"
      },
      {
        "title": "function",
        "description": null,
        "lineNumber": 4,
        "name": null
      },
      {
        "title": "param",
        "description": "numbers",
        "lineNumber": 5,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "number"
            }
          ]
        },
        "name": "values"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "example",
        "description": "MathMIN([1,2,3,4.5]);\n// returns 1",
        "lineNumber": 7
      }
    ],
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 10,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 12,
          "column": 0
        },
        "end": {
          "line": 25,
          "column": 1
        }
      },
      "file": "/Users/kuhlgert/helpers/src/MathMIN.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "MathMIN([1,2,3,4.5]);\n// returns 1"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "values",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "numbers"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "number"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "function",
    "name": "MathMIN",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "MathMIN",
        "kind": "function"
      }
    ],
    "namespace": "MathMIN"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Multiple Linear Regression"
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "access",
        "description": null,
        "lineNumber": 2,
        "access": "public"
      },
      {
        "title": "function",
        "description": null,
        "lineNumber": 3,
        "name": null
      },
      {
        "title": "param",
        "description": "Array of x,y value pairs arrays [ [ [x1,y1], [x2,y2], ..., [xn,yn] ], [ [x1,y1], [x2,y2], ..., [xn,yn] ] ]",
        "lineNumber": 4,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "array"
            }
          ]
        },
        "name": "input_raw"
      },
      {
        "title": "returns",
        "description": "Returns rsquared, slopes and points.",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      },
      {
        "title": "example",
        "description": "MathEXPINVREG( [ [ [x1,y1], [x2,y2], ..., [xn,yn] ], [ [x1,y1], [x2,y2], ..., [xn,yn] ] ] );\n// returns\n{\n  \"rsquared\": rSq,\n  \"slopes\": [slope1, ...],\n  \"points\": [ [x1, x2, ..., xn], [y1, y2, ..., yn] ]\n}",
        "lineNumber": 6
      }
    ],
    "loc": {
      "start": {
        "line": 5,
        "column": 0
      },
      "end": {
        "line": 18,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 19,
          "column": 0
        },
        "end": {
          "line": 94,
          "column": 1
        }
      },
      "file": "/Users/kuhlgert/helpers/src/additional_functions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "MathEXPINVREG( [ [ [x1,y1], [x2,y2], ..., [xn,yn] ], [ [x1,y1], [x2,y2], ..., [xn,yn] ] ] );\n// returns\n{\n  \"rsquared\": rSq,\n  \"slopes\": [slope1, ...],\n  \"points\": [ [x1, x2, ..., xn], [y1, y2, ..., yn] ]\n}"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "input_raw",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Array of x,y value pairs arrays [ [ [x1,y1], [x2,y2], ..., [xn,yn] ], [ [x1,y1], [x2,y2], ..., [xn,yn] ] ]"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "array"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Returns rsquared, slopes and points."
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "function",
    "name": "MathMULTREG",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "MathMULTREG",
        "kind": "function"
      }
    ],
    "namespace": "MathMULTREG"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Polynomial fit to y = a0 + a1x + a2x^2 + a3x^3...."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "access",
        "description": null,
        "lineNumber": 2,
        "access": "public"
      },
      {
        "title": "function",
        "description": null,
        "lineNumber": 3,
        "name": null
      },
      {
        "title": "param",
        "description": "Array of x,y value pairs arrays [ [ [x1,y1], [x2,y2], ..., [xn,yn] ], [ [x1,y1], [x2,y2], ..., [xn,yn] ] ]",
        "lineNumber": 4,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "array"
            }
          ]
        },
        "name": "input_raw"
      },
      {
        "title": "param",
        "description": "degree.",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "degree"
        },
        "name": "size"
      },
      {
        "title": "returns",
        "description": "Returns points, slopes and error",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      },
      {
        "title": "example",
        "description": "MathPOLYREG( [ [ [x1,y1], [x2,y2], ..., [xn,yn] ], [ [x1,y1], [x2,y2], ..., [xn,yn] ] ], degree );\n// returns\n{\n  \"points\": points,\n  \"slopes\": slopes,\n  \"error\": yError\n}",
        "lineNumber": 7
      }
    ],
    "loc": {
      "start": {
        "line": 213,
        "column": 0
      },
      "end": {
        "line": 227,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 228,
          "column": 0
        },
        "end": {
          "line": 266,
          "column": 1
        }
      },
      "file": "/Users/kuhlgert/helpers/src/additional_functions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "MathPOLYREG( [ [ [x1,y1], [x2,y2], ..., [xn,yn] ], [ [x1,y1], [x2,y2], ..., [xn,yn] ] ], degree );\n// returns\n{\n  \"points\": points,\n  \"slopes\": slopes,\n  \"error\": yError\n}"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "input_raw",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Array of x,y value pairs arrays [ [ [x1,y1], [x2,y2], ..., [xn,yn] ], [ [x1,y1], [x2,y2], ..., [xn,yn] ] ]"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "array"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "degree",
        "lineNumber": 228
      },
      {
        "title": "param",
        "name": "size",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "degree."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "degree"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Returns points, slopes and error"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "function",
    "name": "MathPOLYREG",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "MathPOLYREG",
        "kind": "function"
      }
    ],
    "namespace": "MathPOLYREG"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Calculate the variance from an array of numbers. The function fails if the array is empty or has invalid values."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "access",
        "description": null,
        "lineNumber": 2,
        "access": "public"
      },
      {
        "title": "function",
        "description": null,
        "lineNumber": 3,
        "name": null
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "value"
      },
      {
        "title": "param",
        "description": "number of digits",
        "lineNumber": 5,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "digets",
        "default": "2"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "example",
        "description": "MathROUND(1.23456789, 5);\n// returns 1.2346",
        "lineNumber": 7
      }
    ],
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 10,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 12,
          "column": 0
        },
        "end": {
          "line": 28,
          "column": 1
        }
      },
      "file": "/Users/kuhlgert/helpers/src/MathROUND.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "MathROUND(1.23456789, 5);\n// returns 1.2346"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "value",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "param",
        "name": "digets",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "number of digits"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "default": "2"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "function",
    "name": "MathROUND",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "MathROUND",
        "kind": "function"
      }
    ],
    "namespace": "MathROUND"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Calculate the standard error from an array of numbers. The function fails if the array is empty or has invalid values."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "access",
        "description": null,
        "lineNumber": 2,
        "access": "public"
      },
      {
        "title": "function",
        "description": null,
        "lineNumber": 3,
        "name": null
      },
      {
        "title": "param",
        "description": "numbers",
        "lineNumber": 4,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "number"
            }
          ]
        },
        "name": "values"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "example",
        "description": "MathSTDERR([1,2,3,4.5]);\n// returns 0.6465050270492876",
        "lineNumber": 6
      }
    ],
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 9,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 11,
          "column": 0
        },
        "end": {
          "line": 52,
          "column": 1
        }
      },
      "file": "/Users/kuhlgert/helpers/src/MathSTDERR.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "MathSTDERR([1,2,3,4.5]);\n// returns 0.6465050270492876"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "values",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "numbers"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "number"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "function",
    "name": "MathSTDERR",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "MathSTDERR",
        "kind": "function"
      }
    ],
    "namespace": "MathSTDERR"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Calculate the variance from an array of numbers. The function fails if the array is empty or has invalid values."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "access",
        "description": null,
        "lineNumber": 2,
        "access": "public"
      },
      {
        "title": "function",
        "description": null,
        "lineNumber": 3,
        "name": null
      },
      {
        "title": "param",
        "description": "numbers",
        "lineNumber": 4,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "number"
            }
          ]
        },
        "name": "values"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "example",
        "description": "MathSTDEV([1,2,3,4.5]);\n// returns 1.2930100540985752",
        "lineNumber": 6
      }
    ],
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 9,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 11,
          "column": 0
        },
        "end": {
          "line": 52,
          "column": 1
        }
      },
      "file": "/Users/kuhlgert/helpers/src/MathSTDEV.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "MathSTDEV([1,2,3,4.5]);\n// returns 1.2930100540985752"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "values",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "numbers"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "number"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "function",
    "name": "MathSTDEV",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "MathSTDEV",
        "kind": "function"
      }
    ],
    "namespace": "MathSTDEV"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Calculate the variance from an array of numbers. The function fails if the array is empty or has invalid values."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "access",
        "description": null,
        "lineNumber": 2,
        "access": "public"
      },
      {
        "title": "function",
        "description": null,
        "lineNumber": 3,
        "name": null
      },
      {
        "title": "param",
        "description": "numbers",
        "lineNumber": 4,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "number"
            }
          ]
        },
        "name": "values"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "example",
        "description": "MathSTDEVS([1,2,3,4.5]);\n// returns 1.4930394055974097",
        "lineNumber": 6
      }
    ],
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 9,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 11,
          "column": 0
        },
        "end": {
          "line": 52,
          "column": 1
        }
      },
      "file": "/Users/kuhlgert/helpers/src/MathSTDEVS.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "MathSTDEVS([1,2,3,4.5]);\n// returns 1.4930394055974097"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "values",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "numbers"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "number"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "function",
    "name": "MathSTDEVS",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "MathSTDEVS",
        "kind": "function"
      }
    ],
    "namespace": "MathSTDEVS"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Calculate the sum from an array of numbers. The function fails if the array is empty or has invalid values."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "access",
        "description": null,
        "lineNumber": 2,
        "access": "public"
      },
      {
        "title": "function",
        "description": null,
        "lineNumber": 3,
        "name": null
      },
      {
        "title": "param",
        "description": "numbers",
        "lineNumber": 4,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "number"
            }
          ]
        },
        "name": "values"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "example",
        "description": "MathSum([1,2,3,4.5]);\n// returns 10.5",
        "lineNumber": 6
      }
    ],
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 9,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 11,
          "column": 0
        },
        "end": {
          "line": 25,
          "column": 1
        }
      },
      "file": "/Users/kuhlgert/helpers/src/MathSUM.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "MathSum([1,2,3,4.5]);\n// returns 10.5"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "values",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "numbers"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "number"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "function",
    "name": "MathSUM",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "MathSUM",
        "kind": "function"
      }
    ],
    "namespace": "MathSUM"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Calculate the variance from an array of numbers. The function fails if the array is empty or has invalid values."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "access",
        "description": null,
        "lineNumber": 2,
        "access": "public"
      },
      {
        "title": "function",
        "description": null,
        "lineNumber": 3,
        "name": null
      },
      {
        "title": "param",
        "description": "numbers",
        "lineNumber": 4,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "number"
            }
          ]
        },
        "name": "values"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "example",
        "description": "MathVARIANCE([1,2,3,4.5]);\n// returns 2.2292",
        "lineNumber": 6
      }
    ],
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 9,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 11,
          "column": 0
        },
        "end": {
          "line": 46,
          "column": 1
        }
      },
      "file": "/Users/kuhlgert/helpers/src/MathVARIANCE.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "MathVARIANCE([1,2,3,4.5]);\n// returns 2.2292"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "values",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "numbers"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "number"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "function",
    "name": "MathVARIANCE",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "MathVARIANCE",
        "kind": "function"
      }
    ],
    "namespace": "MathVARIANCE"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Function to perform a non-linear regression."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "see",
        "description": "http://statpages.info/nonlin.html",
        "lineNumber": 2
      },
      {
        "title": "access",
        "description": null,
        "lineNumber": 3,
        "access": "public"
      },
      {
        "title": "function",
        "description": null,
        "lineNumber": 4,
        "name": null
      },
      {
        "title": "param",
        "description": "Data for the non-linear regression needs to be provided as an array of x,y pairs. `[[x1,y1], [x2,y2], ..., [xn,yn]]`",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "data"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "options"
      },
      {
        "title": "param",
        "description": "Select preset equation (string) or supply function",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "function"
            }
          ]
        },
        "name": "options.equation"
      },
      {
        "title": "param",
        "description": "Array with the initial guesses for parameters in equation [a, b, ..., h]",
        "lineNumber": 8,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "number"
            }
          ]
        },
        "name": "options.initial"
      },
      {
        "title": "param",
        "description": "Number of iterations (maximum 2000)",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.iterations",
        "default": "200"
      },
      {
        "title": "param",
        "description": "Number of datapoints",
        "lineNumber": 10,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.cPts"
      },
      {
        "title": "param",
        "description": "Number of independant variables",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "options.cVar"
      },
      {
        "title": "param",
        "description": "Number of parameters",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "options.cPar"
      },
      {
        "title": "param",
        "description": "Fractional adjustment factor (Values smaller than 1 will make the covergence slower but more stable)",
        "lineNumber": 13,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.RelaxF",
        "default": "1.0"
      },
      {
        "title": "param",
        "description": "Standard Error associated with the Y variable (Equal `1`, Relative `Y`, Counts `Sqrt(Y)`, Data `w`, Replicates `Rep`",
        "lineNumber": 14,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NumericLiteralType",
                "value": 1
              },
              {
                "type": "StringLiteralType",
                "value": "Y"
              },
              {
                "type": "StringLiteralType",
                "value": "Sqrt(Y)"
              },
              {
                "type": "StringLiteralType",
                "value": "w"
              },
              {
                "type": "StringLiteralType",
                "value": "Rep"
              }
            ]
          }
        },
        "name": "options.SEy",
        "default": "1"
      },
      {
        "title": "param",
        "description": "Transformation",
        "lineNumber": 15,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "Y"
              },
              {
                "type": "StringLiteralType",
                "value": "LN(Y)"
              },
              {
                "type": "StringLiteralType",
                "value": "SQRT(Y)"
              },
              {
                "type": "StringLiteralType",
                "value": "1/Y"
              }
            ]
          }
        },
        "name": "options.yTrans",
        "default": "\"Y\""
      },
      {
        "title": "param",
        "description": "Transformation",
        "lineNumber": 16,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "X1"
              },
              {
                "type": "StringLiteralType",
                "value": "LN(X1)"
              },
              {
                "type": "StringLiteralType",
                "value": "SQRT(X1)"
              },
              {
                "type": "StringLiteralType",
                "value": "1/X1"
              }
            ]
          }
        },
        "name": "options.x1Trans",
        "default": "\"X1\""
      },
      {
        "title": "param",
        "description": "Transformation",
        "lineNumber": 17,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "X2"
              },
              {
                "type": "StringLiteralType",
                "value": "LN(X2)"
              },
              {
                "type": "StringLiteralType",
                "value": "SQRT(X2)"
              },
              {
                "type": "StringLiteralType",
                "value": "1/X2"
              }
            ]
          }
        },
        "name": "options.x2Trans",
        "default": "\"X2\""
      },
      {
        "title": "param",
        "description": "Transformation",
        "lineNumber": 18,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "X3"
              },
              {
                "type": "StringLiteralType",
                "value": "LN(X3)"
              },
              {
                "type": "StringLiteralType",
                "value": "SQRT(X3)"
              },
              {
                "type": "StringLiteralType",
                "value": "1/X3"
              }
            ]
          }
        },
        "name": "options.x3Trans",
        "default": "\"X3\""
      },
      {
        "title": "param",
        "description": "Transformation",
        "lineNumber": 19,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "X4"
              },
              {
                "type": "StringLiteralType",
                "value": "LN(X4)"
              },
              {
                "type": "StringLiteralType",
                "value": "SQRT(X4)"
              },
              {
                "type": "StringLiteralType",
                "value": "1/X4"
              }
            ]
          }
        },
        "name": "options.x4Trans",
        "default": "\"X4\""
      },
      {
        "title": "param",
        "description": "Transformation",
        "lineNumber": 20,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "X5"
              },
              {
                "type": "StringLiteralType",
                "value": "LN(X5)"
              },
              {
                "type": "StringLiteralType",
                "value": "SQRT(X5)"
              },
              {
                "type": "StringLiteralType",
                "value": "1/X5"
              }
            ]
          }
        },
        "name": "options.x5Trans",
        "default": "\"X5\""
      },
      {
        "title": "param",
        "description": "Transformation",
        "lineNumber": 21,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "X6"
              },
              {
                "type": "StringLiteralType",
                "value": "LN(X6)"
              },
              {
                "type": "StringLiteralType",
                "value": "SQRT(X6)"
              },
              {
                "type": "StringLiteralType",
                "value": "1/X6"
              }
            ]
          }
        },
        "name": "options.x6Trans",
        "default": "\"X6\""
      },
      {
        "title": "param",
        "description": "Transformation",
        "lineNumber": 22,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "X7"
              },
              {
                "type": "StringLiteralType",
                "value": "LN(X7)"
              },
              {
                "type": "StringLiteralType",
                "value": "SQRT(X7)"
              },
              {
                "type": "StringLiteralType",
                "value": "1/X7"
              }
            ]
          }
        },
        "name": "options.x7Trans",
        "default": "\"X7\""
      },
      {
        "title": "param",
        "description": "Transformation",
        "lineNumber": 23,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "X8"
              },
              {
                "type": "StringLiteralType",
                "value": "LN(X8)"
              },
              {
                "type": "StringLiteralType",
                "value": "SQRT(X8)"
              },
              {
                "type": "StringLiteralType",
                "value": "1/X8"
              }
            ]
          }
        },
        "name": "options.x8Trans",
        "default": "\"X8\""
      },
      {
        "title": "param",
        "description": "Centered Approximation to Partial Derivatives",
        "lineNumber": 24,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.Centered",
        "default": "false"
      },
      {
        "title": "param",
        "description": "Least-Absolute -Value curve fitting",
        "lineNumber": 25,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "options.LeastAbs",
        "default": "false"
      },
      {
        "title": "param",
        "description": "Percentile",
        "lineNumber": 26,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "options.cPctile",
        "default": "50"
      },
      {
        "title": "returns",
        "description": null,
        "lineNumber": 27,
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      },
      {
        "title": "example",
        "description": "NonLinearRegression(\n [\n\t  [x1, y1],\n\t  [x2, y2],\n\t  ...,\n\t  [xn, yn]\n ],\n {\n\t  equation: \"b + a * e(- x / c)\",\n\t  initial: [a, b, c]\n }\n)\n\n\n// Available equations\n// \"b + a * e(- x / c)\"\n// \"( a - c ) * e( - b * t ) + c\"\n// \"( c + a / ( 1 + b / x ) )\"\n// \"( c + a * a / ( 1 + b / x ) )\"\n\n\n// returns\n// {\n//   text: <string>,\n//   ParameterEstimates: <string>,\n//   CovarianceMatrix: <string>,\n//   r2: <number>\n//   parameters: {\n//     name: <string>,\n//     value: <number>,\n//     sd_error: <number>,\n//     p: <number>\n//   },\n//   RMS_error: <number>,\n//   presets: <object>,\n//   iterations: <number>,\n//   RMS_errors: <array>\n// }",
        "lineNumber": 28
      },
      {
        "title": "example",
        "description": "// Use a custom fitting function\n// The function can contain the following parameters:\n// x, t, a, b, c, .. h\n// Not all parameters have to be defined and they can\n// be in a random order. Use parameter names in alphabetical\n// order (e.g. a and b, a and c without b will not work)\nvar decay = function(x,a,b,c){\nreturn b + a * Math.exp( -x / c );\n};\n\nNonLinearRegression(\n [\n\t  [x1, y1],\n\t  [x2, y2],\n\t  ...,\n\t  [xn, yn]\n ],\n {\n\t  equation: decay,\n\t  initial: [a, b, c]\n }\n)\n// The returned object has the same structure as object in\n// in the previous example.",
        "lineNumber": 67
      }
    ],
    "loc": {
      "start": {
        "line": 3,
        "column": 0
      },
      "end": {
        "line": 94,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 96,
          "column": 0
        },
        "end": {
          "line": 414,
          "column": 1
        }
      },
      "file": "/Users/kuhlgert/helpers/src/NonLinearRegression.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "NonLinearRegression(\n [\n\t  [x1, y1],\n\t  [x2, y2],\n\t  ...,\n\t  [xn, yn]\n ],\n {\n\t  equation: \"b + a * e(- x / c)\",\n\t  initial: [a, b, c]\n }\n)\n\n\n// Available equations\n// \"b + a * e(- x / c)\"\n// \"( a - c ) * e( - b * t ) + c\"\n// \"( c + a / ( 1 + b / x ) )\"\n// \"( c + a * a / ( 1 + b / x ) )\"\n\n\n// returns\n// {\n//   text: <string>,\n//   ParameterEstimates: <string>,\n//   CovarianceMatrix: <string>,\n//   r2: <number>\n//   parameters: {\n//     name: <string>,\n//     value: <number>,\n//     sd_error: <number>,\n//     p: <number>\n//   },\n//   RMS_error: <number>,\n//   presets: <object>,\n//   iterations: <number>,\n//   RMS_errors: <array>\n// }"
      },
      {
        "description": "// Use a custom fitting function\n// The function can contain the following parameters:\n// x, t, a, b, c, .. h\n// Not all parameters have to be defined and they can\n// be in a random order. Use parameter names in alphabetical\n// order (e.g. a and b, a and c without b will not work)\nvar decay = function(x,a,b,c){\nreturn b + a * Math.exp( -x / c );\n};\n\nNonLinearRegression(\n [\n\t  [x1, y1],\n\t  [x2, y2],\n\t  ...,\n\t  [xn, yn]\n ],\n {\n\t  equation: decay,\n\t  initial: [a, b, c]\n }\n)\n// The returned object has the same structure as object in\n// in the previous example."
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "data",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Data for the non-linear regression needs to be provided as an array of x,y pairs. "
                },
                {
                  "type": "inlineCode",
                  "value": "[[x1,y1], [x2,y2], ..., [xn,yn]]"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "properties": [
          {
            "title": "param",
            "name": "options.equation",
            "lineNumber": 7,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Select preset equation (string) or supply function"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NameExpression",
                  "name": "string"
                },
                {
                  "type": "NameExpression",
                  "name": "function"
                }
              ]
            }
          },
          {
            "title": "param",
            "name": "options.initial",
            "lineNumber": 8,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Array with the initial guesses for parameters in equation [a, b, ..., h]"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "number"
                }
              ]
            }
          },
          {
            "title": "param",
            "name": "options.iterations",
            "lineNumber": 9,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Number of iterations (maximum 2000)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "200"
          },
          {
            "title": "param",
            "name": "options.cPts",
            "lineNumber": 10,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Number of datapoints"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "OptionalType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          },
          {
            "title": "param",
            "name": "options.cVar",
            "lineNumber": 11,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Number of independant variables"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            }
          },
          {
            "title": "param",
            "name": "options.cPar",
            "lineNumber": 12,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Number of parameters"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            }
          },
          {
            "title": "param",
            "name": "options.RelaxF",
            "lineNumber": 13,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Fractional adjustment factor (Values smaller than 1 will make the covergence slower but more stable)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "1.0"
          },
          {
            "title": "param",
            "name": "options.SEy",
            "lineNumber": 14,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Standard Error associated with the Y variable (Equal "
                    },
                    {
                      "type": "inlineCode",
                      "value": "1"
                    },
                    {
                      "type": "text",
                      "value": ", Relative "
                    },
                    {
                      "type": "inlineCode",
                      "value": "Y"
                    },
                    {
                      "type": "text",
                      "value": ", Counts "
                    },
                    {
                      "type": "inlineCode",
                      "value": "Sqrt(Y)"
                    },
                    {
                      "type": "text",
                      "value": ", Data "
                    },
                    {
                      "type": "inlineCode",
                      "value": "w"
                    },
                    {
                      "type": "text",
                      "value": ", Replicates "
                    },
                    {
                      "type": "inlineCode",
                      "value": "Rep"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NumericLiteralType",
                  "value": 1
                },
                {
                  "type": "StringLiteralType",
                  "value": "Y"
                },
                {
                  "type": "StringLiteralType",
                  "value": "Sqrt(Y)"
                },
                {
                  "type": "StringLiteralType",
                  "value": "w"
                },
                {
                  "type": "StringLiteralType",
                  "value": "Rep"
                }
              ]
            },
            "default": "1"
          },
          {
            "title": "param",
            "name": "options.yTrans",
            "lineNumber": 15,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Transformation"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "StringLiteralType",
                  "value": "Y"
                },
                {
                  "type": "StringLiteralType",
                  "value": "LN(Y)"
                },
                {
                  "type": "StringLiteralType",
                  "value": "SQRT(Y)"
                },
                {
                  "type": "StringLiteralType",
                  "value": "1/Y"
                }
              ]
            },
            "default": "\"Y\""
          },
          {
            "title": "param",
            "name": "options.x1Trans",
            "lineNumber": 16,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Transformation"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "StringLiteralType",
                  "value": "X1"
                },
                {
                  "type": "StringLiteralType",
                  "value": "LN(X1)"
                },
                {
                  "type": "StringLiteralType",
                  "value": "SQRT(X1)"
                },
                {
                  "type": "StringLiteralType",
                  "value": "1/X1"
                }
              ]
            },
            "default": "\"X1\""
          },
          {
            "title": "param",
            "name": "options.x2Trans",
            "lineNumber": 17,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Transformation"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "StringLiteralType",
                  "value": "X2"
                },
                {
                  "type": "StringLiteralType",
                  "value": "LN(X2)"
                },
                {
                  "type": "StringLiteralType",
                  "value": "SQRT(X2)"
                },
                {
                  "type": "StringLiteralType",
                  "value": "1/X2"
                }
              ]
            },
            "default": "\"X2\""
          },
          {
            "title": "param",
            "name": "options.x3Trans",
            "lineNumber": 18,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Transformation"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "StringLiteralType",
                  "value": "X3"
                },
                {
                  "type": "StringLiteralType",
                  "value": "LN(X3)"
                },
                {
                  "type": "StringLiteralType",
                  "value": "SQRT(X3)"
                },
                {
                  "type": "StringLiteralType",
                  "value": "1/X3"
                }
              ]
            },
            "default": "\"X3\""
          },
          {
            "title": "param",
            "name": "options.x4Trans",
            "lineNumber": 19,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Transformation"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "StringLiteralType",
                  "value": "X4"
                },
                {
                  "type": "StringLiteralType",
                  "value": "LN(X4)"
                },
                {
                  "type": "StringLiteralType",
                  "value": "SQRT(X4)"
                },
                {
                  "type": "StringLiteralType",
                  "value": "1/X4"
                }
              ]
            },
            "default": "\"X4\""
          },
          {
            "title": "param",
            "name": "options.x5Trans",
            "lineNumber": 20,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Transformation"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "StringLiteralType",
                  "value": "X5"
                },
                {
                  "type": "StringLiteralType",
                  "value": "LN(X5)"
                },
                {
                  "type": "StringLiteralType",
                  "value": "SQRT(X5)"
                },
                {
                  "type": "StringLiteralType",
                  "value": "1/X5"
                }
              ]
            },
            "default": "\"X5\""
          },
          {
            "title": "param",
            "name": "options.x6Trans",
            "lineNumber": 21,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Transformation"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "StringLiteralType",
                  "value": "X6"
                },
                {
                  "type": "StringLiteralType",
                  "value": "LN(X6)"
                },
                {
                  "type": "StringLiteralType",
                  "value": "SQRT(X6)"
                },
                {
                  "type": "StringLiteralType",
                  "value": "1/X6"
                }
              ]
            },
            "default": "\"X6\""
          },
          {
            "title": "param",
            "name": "options.x7Trans",
            "lineNumber": 22,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Transformation"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "StringLiteralType",
                  "value": "X7"
                },
                {
                  "type": "StringLiteralType",
                  "value": "LN(X7)"
                },
                {
                  "type": "StringLiteralType",
                  "value": "SQRT(X7)"
                },
                {
                  "type": "StringLiteralType",
                  "value": "1/X7"
                }
              ]
            },
            "default": "\"X7\""
          },
          {
            "title": "param",
            "name": "options.x8Trans",
            "lineNumber": 23,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Transformation"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "StringLiteralType",
                  "value": "X8"
                },
                {
                  "type": "StringLiteralType",
                  "value": "LN(X8)"
                },
                {
                  "type": "StringLiteralType",
                  "value": "SQRT(X8)"
                },
                {
                  "type": "StringLiteralType",
                  "value": "1/X8"
                }
              ]
            },
            "default": "\"X8\""
          },
          {
            "title": "param",
            "name": "options.Centered",
            "lineNumber": 24,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Centered Approximation to Partial Derivatives"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "false"
          },
          {
            "title": "param",
            "name": "options.LeastAbs",
            "lineNumber": 25,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Least-Absolute -Value curve fitting"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "boolean"
            },
            "default": "false"
          },
          {
            "title": "param",
            "name": "options.cPctile",
            "lineNumber": 26,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Percentile"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "number"
            },
            "default": "50"
          }
        ]
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": []
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "sees": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "link",
                  "title": null,
                  "url": "http://statpages.info/nonlin.html",
                  "children": [
                    {
                      "type": "text",
                      "value": "http://statpages.info/nonlin.html"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "title": "sees"
      }
    ],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "function",
    "name": "NonLinearRegression",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "NonLinearRegression",
        "kind": "function"
      }
    ],
    "namespace": "NonLinearRegression"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The function transforms a given array by providing a second same length array, or a single number."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "access",
        "description": null,
        "lineNumber": 2,
        "access": "public"
      },
      {
        "title": "function",
        "description": null,
        "lineNumber": 3,
        "name": null
      },
      {
        "title": "param",
        "description": "Available functions to transform the input array.",
        "lineNumber": 4,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "StringLiteralType",
              "value": "add"
            },
            {
              "type": "StringLiteralType",
              "value": "subtract"
            },
            {
              "type": "StringLiteralType",
              "value": "multiply"
            },
            {
              "type": "StringLiteralType",
              "value": "divide"
            },
            {
              "type": "StringLiteralType",
              "value": "+"
            },
            {
              "type": "StringLiteralType",
              "value": "-"
            },
            {
              "type": "StringLiteralType",
              "value": "*"
            },
            {
              "type": "StringLiteralType",
              "value": "/"
            },
            {
              "type": "StringLiteralType",
              "value": "normToMin"
            },
            {
              "type": "StringLiteralType",
              "value": "normToMax"
            },
            {
              "type": "StringLiteralType",
              "value": "normToRange"
            },
            {
              "type": "StringLiteralType",
              "value": "normToIdx"
            },
            {
              "type": "StringLiteralType",
              "value": "normToVal"
            },
            {
              "type": "StringLiteralType",
              "value": "ma"
            },
            {
              "type": "StringLiteralType",
              "value": "sgf"
            },
            {
              "type": "StringLiteralType",
              "value": "abs"
            },
            {
              "type": "StringLiteralType",
              "value": "absorbance"
            },
            {
              "type": "StringLiteralType",
              "value": "absolute"
            }
          ]
        },
        "name": "fn"
      },
      {
        "title": "param",
        "description": "Input array.",
        "lineNumber": 5,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "number"
            }
          ]
        },
        "name": "a1"
      },
      {
        "title": "param",
        "description": "Second array or single number",
        "lineNumber": 6,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "number"
              },
              {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "number"
                  }
                ]
              }
            ]
          }
        },
        "name": "a2"
      },
      {
        "title": "returns",
        "description": "Transformed array, a string with an error message or null",
        "lineNumber": 7,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "number"
                }
              ]
            },
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      },
      {
        "title": "example",
        "description": "TransformTrace('subtract', [1, 2, 3, 4], [0, 1, 2, 1]);\n// returns [1, 1, 1, 3]\n\nTransformTrace('add', [1, 2, 3, 4], [0, 1, 2, 1]);\n// returns [1, 3, 5, 5]\n\nTransformTrace('add', [1, 2, 3, 4], 5);\n// returns [6, 7, 8, 9]\n\nTransformTrace('normToMin', [1.5, 2, 3, 4]);\n// returns [1, 1.3333, 2, 2.6665]\n\nTransformTrace('normToMax', [1.5, 2, 3, 4]);\n// returns [0.375, 0.5, 0.75, 1]\n\nTransformTrace('normToRange', [1.5, 2, 3, 4]);\n// returns [0, 0.2, 0.6, 1]\n\nTransformTrace('normToIdx', [1.5, 2, 3, 4], 1);\n// returns [0.75, 1, 1.5, 2]\n\nTransformTrace('normToVal', [1, 2, 3, 4], 2);\n// returns [0.75, 1, 1.5, 2]\n\n// Smoothing (ma= Moving average, sgf= Savitzky-Golay filter)\n\nTransformTrace('ma', [1.5, 2, 3, 4]);\n// returns [1.6667, 2.1665, 3, 3.6665]\n\nTransformTrace('sgf', [1,2,3,4,3,2,1,1]);\n// returns [1.3333333333333333,1.9523809523809523]\n\n// Absorbance (abs) -log(I/I0)\n\n// In case no value is provided, I0 is the fist value from the array\nTransformTrace('abs', [1.5, 2, 3, 4]);\n// returns [-0, -0.12494, -0.30103, -0.42597]\n\nTransformTrace('absorbance', [1.5, 2, 3, 4]);\n// returns [-0, -0.12494, -0.30103, -0.42597]\n\n// The provided value is I0\nTransformTrace('abs', [1.5, 2, 3, 4], 1);\n// returns [-0.1761, -0.3010, -0.4771, -0.6021]\n\n// Absolute numbers\nTransformTrace('absolute', [1, -2, 3, -4]);\n// returns [1, 2, 3, 4]",
        "lineNumber": 8
      }
    ],
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 58,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 60,
          "column": 0
        },
        "end": {
          "line": 223,
          "column": 1
        }
      },
      "file": "/Users/kuhlgert/helpers/src/TransformTrace.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "TransformTrace('subtract', [1, 2, 3, 4], [0, 1, 2, 1]);\n// returns [1, 1, 1, 3]\n\nTransformTrace('add', [1, 2, 3, 4], [0, 1, 2, 1]);\n// returns [1, 3, 5, 5]\n\nTransformTrace('add', [1, 2, 3, 4], 5);\n// returns [6, 7, 8, 9]\n\nTransformTrace('normToMin', [1.5, 2, 3, 4]);\n// returns [1, 1.3333, 2, 2.6665]\n\nTransformTrace('normToMax', [1.5, 2, 3, 4]);\n// returns [0.375, 0.5, 0.75, 1]\n\nTransformTrace('normToRange', [1.5, 2, 3, 4]);\n// returns [0, 0.2, 0.6, 1]\n\nTransformTrace('normToIdx', [1.5, 2, 3, 4], 1);\n// returns [0.75, 1, 1.5, 2]\n\nTransformTrace('normToVal', [1, 2, 3, 4], 2);\n// returns [0.75, 1, 1.5, 2]\n\n// Smoothing (ma= Moving average, sgf= Savitzky-Golay filter)\n\nTransformTrace('ma', [1.5, 2, 3, 4]);\n// returns [1.6667, 2.1665, 3, 3.6665]\n\nTransformTrace('sgf', [1,2,3,4,3,2,1,1]);\n// returns [1.3333333333333333,1.9523809523809523]\n\n// Absorbance (abs) -log(I/I0)\n\n// In case no value is provided, I0 is the fist value from the array\nTransformTrace('abs', [1.5, 2, 3, 4]);\n// returns [-0, -0.12494, -0.30103, -0.42597]\n\nTransformTrace('absorbance', [1.5, 2, 3, 4]);\n// returns [-0, -0.12494, -0.30103, -0.42597]\n\n// The provided value is I0\nTransformTrace('abs', [1.5, 2, 3, 4], 1);\n// returns [-0.1761, -0.3010, -0.4771, -0.6021]\n\n// Absolute numbers\nTransformTrace('absolute', [1, -2, 3, -4]);\n// returns [1, 2, 3, 4]"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "fn",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Available functions to transform the input array."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "StringLiteralType",
              "value": "add"
            },
            {
              "type": "StringLiteralType",
              "value": "subtract"
            },
            {
              "type": "StringLiteralType",
              "value": "multiply"
            },
            {
              "type": "StringLiteralType",
              "value": "divide"
            },
            {
              "type": "StringLiteralType",
              "value": "+"
            },
            {
              "type": "StringLiteralType",
              "value": "-"
            },
            {
              "type": "StringLiteralType",
              "value": "*"
            },
            {
              "type": "StringLiteralType",
              "value": "/"
            },
            {
              "type": "StringLiteralType",
              "value": "normToMin"
            },
            {
              "type": "StringLiteralType",
              "value": "normToMax"
            },
            {
              "type": "StringLiteralType",
              "value": "normToRange"
            },
            {
              "type": "StringLiteralType",
              "value": "normToIdx"
            },
            {
              "type": "StringLiteralType",
              "value": "normToVal"
            },
            {
              "type": "StringLiteralType",
              "value": "ma"
            },
            {
              "type": "StringLiteralType",
              "value": "sgf"
            },
            {
              "type": "StringLiteralType",
              "value": "abs"
            },
            {
              "type": "StringLiteralType",
              "value": "absorbance"
            },
            {
              "type": "StringLiteralType",
              "value": "absolute"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "a1",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Input array."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "number"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "a2",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Second array or single number"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "number"
              },
              {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "number"
                  }
                ]
              }
            ]
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Transformed array, a string with an error message or null"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "number"
                }
              ]
            },
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "void"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "function",
    "name": "TransformTrace",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "TransformTrace",
        "kind": "function"
      }
    ],
    "namespace": "TransformTrace"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Add an Warning Message for the User.\nUse these messages to indicate a potential issue and direct the user to check the measurement again."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "access",
        "description": null,
        "lineNumber": 3,
        "access": "public"
      },
      {
        "title": "function",
        "description": null,
        "lineNumber": 4,
        "name": null
      },
      {
        "title": "param",
        "description": "Warning Message",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "msg"
      },
      {
        "title": "param",
        "description": "object that is returned at the end",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "output"
      },
      {
        "title": "returns",
        "description": "pushes the message into the output object.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      },
      {
        "title": "example",
        "description": "warning('Your Warning Message', output);\n// output['messages']['warning']['Your Warning Message']",
        "lineNumber": 8
      }
    ],
    "loc": {
      "start": {
        "line": 23,
        "column": 0
      },
      "end": {
        "line": 33,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 35,
          "column": 0
        },
        "end": {
          "line": 41,
          "column": 1
        }
      },
      "file": "/Users/kuhlgert/helpers/src/Message.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "warning('Your Warning Message', output);\n// output['messages']['warning']['Your Warning Message']"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "msg",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Warning Message"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "output",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "object that is returned at the end"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "pushes the message into the output object."
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "function",
    "name": "warning",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "warning",
        "kind": "function"
      }
    ],
    "namespace": "warning"
  }
]